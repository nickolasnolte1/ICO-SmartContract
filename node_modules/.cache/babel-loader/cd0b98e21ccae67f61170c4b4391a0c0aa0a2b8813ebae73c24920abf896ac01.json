{"ast":null,"code":"var _jsxFileName = \"/Users/nickolasnolte/Documents/GitHub/Technologies-n-Freedom/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport web3 from './web3';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [ethBalance, setEthBalance] = useState('0');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [icoStatus, setIcoStatus] = useState('');\n  useEffect(() => {\n    // Cargar la cuenta del usuario y los saldos\n    loadBlockchainData();\n  }, []);\n  async function loadBlockchainData() {\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    setAccount(account);\n    const ethBalance = await web3.eth.getBalance(account);\n    setEthBalance(web3.utils.fromWei(ethBalance, 'ether'));\n\n    // Añadir la lógica para obtener el saldo de tokens (BodoCoin)\n    // y el estado de la ICO aquí\n\n    // Actualizar el estado de la ICO\n    setIcoStatus('En curso');\n  }\n\n  // Añadir la lógica para invertir en la ICO y reclamar tokens aquí\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BODOCOIN Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cuenta actual: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Saldo disponible: \", ethBalance, \" SepoliaETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Saldo de Tokens: \", tokenBalance, \" BDC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Estado ICO: \", icoStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3HgeI2qW5418YPPqiyQLhNPqIY0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","web3","jsxDEV","_jsxDEV","App","_s","account","setAccount","ethBalance","setEthBalance","tokenBalance","setTokenBalance","icoStatus","setIcoStatus","loadBlockchainData","accounts","eth","getAccounts","getBalance","utils","fromWei","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nickolasnolte/Documents/GitHub/Technologies-n-Freedom/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport web3 from './web3';\nimport './style.css';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [ethBalance, setEthBalance] = useState('0');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [icoStatus, setIcoStatus] = useState('');\n\n  useEffect(() => {\n    // Cargar la cuenta del usuario y los saldos\n    loadBlockchainData();\n  }, []);\n\n  async function loadBlockchainData() {\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    setAccount(account);\n\n    const ethBalance = await web3.eth.getBalance(account);\n    setEthBalance(web3.utils.fromWei(ethBalance, 'ether'));\n\n    // Añadir la lógica para obtener el saldo de tokens (BodoCoin)\n    // y el estado de la ICO aquí\n\n    // Actualizar el estado de la ICO\n    setIcoStatus('En curso');\n  }\n\n  // Añadir la lógica para invertir en la ICO y reclamar tokens aquí\n\n  return (\n    <div className=\"App\">\n      <h1>BODOCOIN Interface</h1>\n      <p>Cuenta actual: {account}</p>\n      <p>Saldo disponible: {ethBalance} SepoliaETH</p>\n      <p>Saldo de Tokens: {tokenBalance} BDC</p>\n      <p>Estado ICO: {icoStatus}</p>\n\n      {/* Agregar formularios o botones para invertir y reclamar tokens */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,GAAG,CAAC;EACjD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACrD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACAc,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,kBAAkBA,CAAA,EAAG;IAClC,MAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACe,GAAG,CAACC,WAAW,CAAC,CAAC;IAC7C,MAAMX,OAAO,GAAGS,QAAQ,CAAC,CAAC,CAAC;IAC3BR,UAAU,CAACD,OAAO,CAAC;IAEnB,MAAME,UAAU,GAAG,MAAMP,IAAI,CAACe,GAAG,CAACE,UAAU,CAACZ,OAAO,CAAC;IACrDG,aAAa,CAACR,IAAI,CAACkB,KAAK,CAACC,OAAO,CAACZ,UAAU,EAAE,OAAO,CAAC,CAAC;;IAEtD;IACA;;IAEA;IACAK,YAAY,CAAC,UAAU,CAAC;EAC1B;;EAEA;;EAEA,oBACEV,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BvB,OAAA;MAAAmB,QAAA,GAAG,iBAAe,EAAChB,OAAO;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BvB,OAAA;MAAAmB,QAAA,GAAG,oBAAkB,EAACd,UAAU,EAAC,aAAW;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChDvB,OAAA;MAAAmB,QAAA,GAAG,mBAAiB,EAACZ,YAAY,EAAC,MAAI;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1CvB,OAAA;MAAAmB,QAAA,GAAG,cAAY,EAACV,SAAS;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG3B,CAAC;AAEV;AAACrB,EAAA,CAvCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}