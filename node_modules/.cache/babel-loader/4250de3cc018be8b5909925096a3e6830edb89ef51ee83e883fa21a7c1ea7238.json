{"ast":null,"code":"import Web3 from 'web3';\nlet web3;\nif (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n  // Utilizar MetaMask como proveedor si est치 disponible en el navegador\n  web3 = new Web3(window.ethereum);\n  window.ethereum.enable();\n} else {\n  // Si MetaMask no est치 disponible, configurar un proveedor de Infura u otro proveedor\n  const providerUrl = 'https://mainnet.infura.io/v3/your-infura-api-key';\n  web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n}\nexport default web3;","map":{"version":3,"names":["Web3","web3","window","ethereum","enable","providerUrl","providers","HttpProvider"],"sources":["/Users/nickolasnolte/Documents/GitHub/Technologies-n-Freedom/src/web3.js"],"sourcesContent":["import Web3 from 'web3';\n\nlet web3;\n\nif (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n  // Utilizar MetaMask como proveedor si est치 disponible en el navegador\n  web3 = new Web3(window.ethereum);\n  window.ethereum.enable();\n} else {\n  // Si MetaMask no est치 disponible, configurar un proveedor de Infura u otro proveedor\n  const providerUrl = 'https://mainnet.infura.io/v3/your-infura-api-key';\n  web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n}\n\nexport default web3;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AAEvB,IAAIC,IAAI;AAER,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;EAC3E;EACAF,IAAI,GAAG,IAAID,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC;EAChCD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;AAC1B,CAAC,MAAM;EACL;EACA,MAAMC,WAAW,GAAG,kDAAkD;EACtEJ,IAAI,GAAG,IAAID,IAAI,CAAC,IAAIA,IAAI,CAACM,SAAS,CAACC,YAAY,CAACF,WAAW,CAAC,CAAC;AAC/D;AAEA,eAAeJ,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}