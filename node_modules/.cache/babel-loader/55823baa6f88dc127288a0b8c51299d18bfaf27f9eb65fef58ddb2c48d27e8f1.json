{"ast":null,"code":"var _jsxFileName = \"/Users/nickolasnolte/Documents/GitHub/Technologies-n-Freedom/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport web3 from './web3';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [ethBalance, setEthBalance] = useState('0');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [icoStatus, setIcoStatus] = useState('');\n  const [investmentAmount, setInvestmentAmount] = useState(''); // Nuevo estado para la cantidad de inversión\n\n  useEffect(() => {\n    // Cargar la cuenta del usuario y los saldos\n    loadBlockchainData();\n  }, []);\n  async function loadBlockchainData() {\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    setAccount(account);\n    const ethBalance = await web3.eth.getBalance(account);\n    setEthBalance(web3.utils.fromWei(ethBalance, 'ether'));\n\n    // Añadir la lógica para obtener el saldo de tokens (BodoCoin)\n    // y el estado de la ICO aquí\n\n    // Simulamos valores ficticios para fines de demostración\n    setTokenBalance('1000');\n    setIcoStatus('En curso');\n  }\n  async function investInICO() {\n    // Añadir lógica para invertir en ICO aquí\n    // Por ejemplo, enviar una transacción de Ethereum para participar en la ICO\n    console.log('Invertir en ICO');\n  }\n  async function claimTokens() {\n    // Añadir lógica para reclamar tokens aquí\n    // Por ejemplo, enviar una transacción para reclamar tokens\n    console.log('Reclamar Tokens');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"backg\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BODOCOIN Interface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cuenta actual: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Saldo disponible: \", ethBalance, \" SepoliaETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Saldo: \", tokenBalance, \" BDC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Estado ICO: \", icoStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"investment-amount\",\n          children: \"Cantidad de Sepolia-ETH a invertir:     \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"investment-amount\",\n          placeholder: \"Ej. 2.00\",\n          value: investmentAmount,\n          onChange: e => setInvestmentAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: investInICO,\n          children: \"Invertir en ICO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: claimTokens,\n        children: \"Reclamar Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eovcoIwOmZFKEMMNy5L9elH3CFQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","web3","jsxDEV","_jsxDEV","App","_s","account","setAccount","ethBalance","setEthBalance","tokenBalance","setTokenBalance","icoStatus","setIcoStatus","investmentAmount","setInvestmentAmount","loadBlockchainData","accounts","eth","getAccounts","getBalance","utils","fromWei","investInICO","console","log","claimTokens","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nickolasnolte/Documents/GitHub/Technologies-n-Freedom/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport web3 from './web3';\nimport './style.css';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [ethBalance, setEthBalance] = useState('0');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [icoStatus, setIcoStatus] = useState('');\n  const [investmentAmount, setInvestmentAmount] = useState(''); // Nuevo estado para la cantidad de inversión\n\n  useEffect(() => {\n    // Cargar la cuenta del usuario y los saldos\n    loadBlockchainData();\n  }, []);\n\n  async function loadBlockchainData() {\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    setAccount(account);\n\n    const ethBalance = await web3.eth.getBalance(account);\n    setEthBalance(web3.utils.fromWei(ethBalance, 'ether'));\n\n    // Añadir la lógica para obtener el saldo de tokens (BodoCoin)\n    // y el estado de la ICO aquí\n\n    // Simulamos valores ficticios para fines de demostración\n    setTokenBalance('1000');\n    setIcoStatus('En curso');\n  }\n\n  async function investInICO() {\n    // Añadir lógica para invertir en ICO aquí\n    // Por ejemplo, enviar una transacción de Ethereum para participar en la ICO\n    console.log('Invertir en ICO');\n  }\n\n  async function claimTokens() {\n    // Añadir lógica para reclamar tokens aquí\n    // Por ejemplo, enviar una transacción para reclamar tokens\n    console.log('Reclamar Tokens');\n  }\n\n  return (\n    <div className=\"App\">\n      <div class = \"backg\">\n        <h1>BODOCOIN Interface</h1>\n      </div>\n      <p>Cuenta actual: {account}</p>\n      <p>Saldo disponible: {ethBalance} SepoliaETH</p>\n      <p>Saldo: {tokenBalance} BDC</p>\n      <p>Estado ICO: {icoStatus}</p>\n\n      {/* Botones para invertir y reclamar tokens */}\n      <div className=\"buttons\">\n        <div className=\"form\">\n          <label htmlFor=\"investment-amount\">Cantidad de Sepolia-ETH a invertir:     </label>\n          <input\n            type=\"text\"\n            id=\"investment-amount\"\n            placeholder=\"Ej. 2.00\"\n            value={investmentAmount}\n            onChange={(e) => setInvestmentAmount(e.target.value)}\n          />\n          <button onClick={investInICO}>Invertir en ICO</button>\n        </div>\n        <button onClick={claimTokens}>Reclamar Tokens</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}