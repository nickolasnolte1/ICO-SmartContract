{"ast":null,"code":"var _jsxFileName = \"/Users/nickolasnolte/Documents/GitHub/Technologies-n-Freedom/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport web3 from './web3';\nimport './style.css';\nimport contractABI from './ABI.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [ethBalance, setEthBalance] = useState('0');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [icoStatus, setIcoStatus] = useState('');\n  const [investmentAmount, setInvestmentAmount] = useState(''); // Nuevo estado para la cantidad de inversión\n  const contractTokenAddress = '0xe051aeF51F721D107E1A81B675eA2ad43ca4F682';\n  async function loadBlockchainData() {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const account = accounts[0];\n      setAccount(account);\n      const ethBalance = await web3.eth.getBalance(account);\n      setEthBalance(web3.utils.fromWei(ethBalance, 'ether'));\n\n      // Consultar el saldo de tokens (BodoCoin) desde tu contrato inteligente\n      const contract = new web3.eth.Contract(contractABI, '0xe051aeF51F721D107E1A81B675eA2ad43ca4F682');\n      const tokenBalance = await contract.methods.balanceOf(account).call();\n      setTokenBalance(tokenBalance);\n\n      // Consultar el estado de la ICO desde tu contrato inteligente\n      const icoStatus = await contract.methods.icoStatus().call();\n      setIcoStatus(icoStatus === true ? 'En curso' : 'Finalizada');\n    } catch (error) {\n      console.error('Error al cargar datos desde el contrato:', error);\n      alert('Error al cargar datos desde el contrato. Consulta la consola para obtener más detalles.');\n    }\n  }\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  async function investInICO() {\n    try {\n      const investmentInEther = parseFloat(investmentAmount);\n      if (isNaN(investmentInEther) || investmentInEther <= 0) {\n        alert('Ingrese una cantidad válida para invertir.');\n        return;\n      }\n\n      // Convierte la cantidad de inversión de Ether a Wei\n      const investmentInWei = web3.utils.toWei(investmentAmount, 'ether');\n\n      // Llama a la función de inversión en el contrato inteligente\n      const contract = new web3.eth.Contract(contractABI, '0xe051aeF51F721D107E1A81B675eA2ad43ca4F682');\n      await contract.methods.claimTokens().send({\n        from: account,\n        value: investmentInWei\n      });\n\n      // Actualiza los saldos y estados después de la inversión\n      loadBlockchainData();\n    } catch (error) {\n      console.error('Error al invertir en la ICO:', error);\n      alert('Error al invertir en la ICO. Consulta la consola para obtener más detalles.');\n    }\n  }\n  async function claimTokens() {\n    try {\n      // Llama a la función de reclamación de tokens en tu contrato inteligente\n      const contract = new web3.eth.Contract(contractABI, '0xe051aeF51F721D107E1A81B675eA2ad43ca4F682');\n      await contract.methods.claimTokens().send({\n        from: account\n      });\n\n      // Actualiza los saldos y estados después de la reclamación\n      loadBlockchainData();\n    } catch (error) {\n      console.error('Error al reclamar tokens:', error);\n      alert('Error al reclamar tokens. Consulta la consola para obtener más detalles.');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BODOCOIN Interface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Cuenta actual:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }, this), \" \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Saldo disponible:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this), \" \", ethBalance, \" SepoliaETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Saldo en BDC:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }, this), \" \", tokenBalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Estado ICO:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }, this), \" \", icoStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"investment-amount\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cantidad de Sepolia-ETH a invertir:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 46\n          }, this), \"     \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"investment-amount\",\n          placeholder: \"Ej. 2.00\",\n          value: investmentAmount,\n          onChange: e => setInvestmentAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: investInICO,\n          children: \"Invertir en ICO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: claimTokens,\n        children: \"Reclamar Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p3\", {\n        className: \"App2\",\n        children: \"1 SepoliaETH = 40 BDC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eovcoIwOmZFKEMMNy5L9elH3CFQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","web3","contractABI","jsxDEV","_jsxDEV","App","_s","account","setAccount","ethBalance","setEthBalance","tokenBalance","setTokenBalance","icoStatus","setIcoStatus","investmentAmount","setInvestmentAmount","contractTokenAddress","loadBlockchainData","accounts","eth","getAccounts","getBalance","utils","fromWei","contract","Contract","methods","balanceOf","call","error","console","alert","investInICO","investmentInEther","parseFloat","isNaN","investmentInWei","toWei","claimTokens","send","from","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nickolasnolte/Documents/GitHub/Technologies-n-Freedom/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport web3 from './web3';\nimport './style.css';\nimport contractABI from './ABI.json';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [ethBalance, setEthBalance] = useState('0');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [icoStatus, setIcoStatus] = useState('');\n  const [investmentAmount, setInvestmentAmount] = useState(''); // Nuevo estado para la cantidad de inversión\n  const contractTokenAddress = '0xe051aeF51F721D107E1A81B675eA2ad43ca4F682';\n\n  async function loadBlockchainData() {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const account = accounts[0];\n      setAccount(account);\n  \n      const ethBalance = await web3.eth.getBalance(account);\n      setEthBalance(web3.utils.fromWei(ethBalance, 'ether'));\n  \n      // Consultar el saldo de tokens (BodoCoin) desde tu contrato inteligente\n      const contract = new web3.eth.Contract(contractABI, '0xe051aeF51F721D107E1A81B675eA2ad43ca4F682'); \n      const tokenBalance = await contract.methods.balanceOf(account).call();\n      setTokenBalance(tokenBalance);\n  \n      // Consultar el estado de la ICO desde tu contrato inteligente\n      const icoStatus = await contract.methods.icoStatus().call();\n      setIcoStatus(icoStatus === true ? 'En curso' : 'Finalizada');\n    } catch (error) {\n      console.error('Error al cargar datos desde el contrato:', error);\n      alert('Error al cargar datos desde el contrato. Consulta la consola para obtener más detalles.');\n    }\n  }\n\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  \n\n  async function investInICO() {\n    try {\n      const investmentInEther = parseFloat(investmentAmount);\n      if (isNaN(investmentInEther) || investmentInEther <= 0) {\n        alert('Ingrese una cantidad válida para invertir.');\n        return;\n      }\n  \n      // Convierte la cantidad de inversión de Ether a Wei\n      const investmentInWei = web3.utils.toWei(investmentAmount, 'ether');\n  \n      // Llama a la función de inversión en el contrato inteligente\n      const contract = new web3.eth.Contract(contractABI, '0xe051aeF51F721D107E1A81B675eA2ad43ca4F682'); \n      await contract.methods.claimTokens().send({\n        from: account,\n        value: investmentInWei,\n      });\n  \n      // Actualiza los saldos y estados después de la inversión\n      loadBlockchainData();\n    } catch (error) {\n      console.error('Error al invertir en la ICO:', error);\n      alert('Error al invertir en la ICO. Consulta la consola para obtener más detalles.');\n    }\n  }\n  \n\n  async function claimTokens() {\n    try {\n      // Llama a la función de reclamación de tokens en tu contrato inteligente\n      const contract = new web3.eth.Contract(contractABI, '0xe051aeF51F721D107E1A81B675eA2ad43ca4F682'); \n      await contract.methods.claimTokens().send({\n        from: account,\n      });\n  \n      // Actualiza los saldos y estados después de la reclamación\n      loadBlockchainData();\n    } catch (error) {\n      console.error('Error al reclamar tokens:', error);\n      alert('Error al reclamar tokens. Consulta la consola para obtener más detalles.');\n    }\n\n\n\n\n  }\n  \n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>BODOCOIN Interface</h1>\n      </div>\n      <p><strong>Cuenta actual:</strong> {account}</p>\n      <p><strong>Saldo disponible:</strong> {ethBalance} SepoliaETH</p>\n      <p><strong>Saldo en BDC:</strong> {tokenBalance}</p>\n      <p><strong>Estado ICO:</strong> {icoStatus}</p>\n\n      {/* Botones para invertir y reclamar tokens */}\n      <div className=\"buttons\">\n        <div className=\"form\">\n          <label htmlFor=\"investment-amount\"><strong>Cantidad de Sepolia-ETH a invertir:</strong>     </label>\n          <input\n            type=\"text\"\n            id=\"investment-amount\"\n            placeholder=\"Ej. 2.00\"\n            value={investmentAmount}\n            onChange={(e) => setInvestmentAmount(e.target.value)}\n          />\n          <button onClick={investInICO}>Invertir en ICO</button>\n        </div>\n        <button onClick={claimTokens}>Reclamar Tokens</button>\n      </div>\n      <div>\n        <p3 className=\"App2\">1 SepoliaETH = 40 BDC</p3>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}